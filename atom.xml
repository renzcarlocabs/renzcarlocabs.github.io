<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Renz Carlo Cabual]]></title>
  <link href="http://renzcarlocabs.github.io/atom.xml" rel="self"/>
  <link href="http://renzcarlocabs.github.io/"/>
  <updated>2015-05-07T11:30:10+08:00</updated>
  <id>http://renzcarlocabs.github.io/</id>
  <author>
    <name><![CDATA[Renz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FM Roster App]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2015/05/07/fm-roster-app/"/>
    <updated>2015-05-07T10:59:38+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2015/05/07/fm-roster-app</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firebase and Amcharts]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2015/05/06/firebase-and-amcharts/"/>
    <updated>2015-05-06T13:56:13+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2015/05/06/firebase-and-amcharts</id>
    <content type="html"><![CDATA[<p><img src="http://renzcarlocabs.github.io/images/amcharts.png" class = "coverImage"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[@Media Queries]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2015/05/06/at-media-rule/"/>
    <updated>2015-05-06T13:22:58+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2015/05/06/at-media-rule</id>
    <content type="html"><![CDATA[<p><img src = "http://renzcarlocabs.github.io/images/css-media-queries.jpg" class="coverImage"></p>

<p>Media rules or media queries are used for the <strong>responsiveness</strong> of a website. When used together with <a href="http://getbootstrap.com/css/" target = "_blank">Bootstrap</a> it becomes a much powerful tool used in web making.</p>

<h3>How to use?</h3>

<p>First you must ensure proper rendering and touch zooming to your website. You can do that by adding the <strong>viewport meta tag</strong> to the <strong>head</strong> of the page:</p>

<pre>
    < meta name="viewport" content="width=device-width, initial-scale=1">
</pre>


<p>After appending the viewport tag to the head of our html page, we can now use <strong>media queries</strong> in our css stylesheet, here is a sample of a media query:</p>

<pre>
    @media screen and (max-width: 768px) {
        body {
            background-color: lightblue;
        }
    }
</pre>


<p>The code above will trigger once the browser or device screen&rsquo;s width becomes 768 pixels, the body will have a background color of lightblue. There are a lot of media types available and not only <strong>screen</strong>, there is also <strong>print</strong>, <strong>projection</strong>, <strong>speech</strong>, <strong>all</strong>, depending on which type of media you want to view the page with.</p>

<p>I am very excited onto learning more about media queries along with bootstrap. I know that I can use these for future use, especially with projects that require page responsiveness.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firebase]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2015/05/06/firebase/"/>
    <updated>2015-05-06T11:24:08+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2015/05/06/firebase</id>
    <content type="html"><![CDATA[<p><img src = "http://renzcarlocabs.github.io/images/Firebase.png" class="coverImage"></p>

<h2>What is Firebase?</h2>

<p>Firebase is a very useful tool/backend service for your static site. It mainly uses JSON Data, Javascript and a little source code from their script and you are ready to go!</p>

<h2>Using Firebase</h2>

<p class="text">
To use firebase, you must declare a reference to your own firebase datastore. Ex:
<pre>
    var ref = new Firebase("https://yourfirebaseio.com/");
    ref.on("value", function(snapshot){
            console.log(snapshot.val());
        }); 
</pre>
</p>


<p><strong>ref</strong> refers to the firebase datastore you want to enter/save your data on. The <strong>snapshot</strong> refers to the data inside firebase, you can use this to call a specific data inside firebase.</p>

<h2>Saving Data</h2>

<p>There are 4 ways of saving data inside firebase:</p>

<ol class = "list">
    <li>push()</li>
    <li>set()</li>
    <li>update()</li>
    <li>transaction()</li>
</ol>


<h3>push()</h3>

<p class="text">
This will make Firebase generate a Unique ID everytime you use it. The data would be put into firebase would be: <pre>https://yourfirebaseio.com/UNIQUE_ID/child/child_data</pre>
</p>


<h3>set()</h3>

<p class="text">
This is used to __write__ or __replace__ the data to a defined constant path. The data that would be put into firebase would be: <pre>https://yourfirebaseio.com/specific_child_path/child_data</pre>
</p>


<h3>update()</h3>

<p class="text">
This will update the data of a key inside firebase without replacing any other data. After you have updated the data you will see that all other data other than the workstatus which we updated will remain unchanged.
</p>


<h2>Retrieving Data</h2>

<p>There are 4 ways of retrieving data inside firebase:</p>

<ol class = "list">
    <li>value</li>
    <li>child_added</li>
    <li>child_changed</li>
    <li>child_removed</li>
</ol>


<h3>value</h3>

<p><strong>value</strong> returns a snapshot of the <strong>whole</strong> content inside a firebase reference once and triggers everytime the data changes. For example:</p>

<pre>
    var ref = new Firebase("https://yourfirebaseio.com/");
    ref.on("value", function(snapshot){
        console.log(snapshot.val());
    });
</pre>


<p>The code above will display all values within the firebase datastore. If you want to show a specific child data you could use <strong>forEach</strong>:</p>

<pre>
    var ref = new Firebase("https://yourfirebaseio.com/");
    ref.on("value", function(snapshot){
        snapshot.forEach(function(dataSnapshot){
            console.log(dataSnapshot.child("name_of_child").val());
        });
    });
</pre>


<p>Where <strong>name_of_child</strong> is the variable which you want to get the data from.</p>

<h3>child_added</h3>

<p><strong>child_added</strong> returns a list of items inside firebase, unlike <strong>value</strong> which returns the whole contents of the firebase, <strong>child_added</strong> triggers for each child existing inside it and triggers again each time a child is added.</p>

<pre>
    var ref = new Firebase("https://yourfirebaseio.com/");
    ref.on("child_added", function(snapshot){
        console.log(snapshot.val());
    });
</pre>


<p>For example you have a total of 5 childs inside your firebase, when you use the code above and check the console of the browser, you will see an array of JSON objects which totals to 5. Depending on how many your child is. The snapshot callback contains the child added in firebase.</p>

<h3>child_changed</h3>

<p><strong>child_changed</strong> triggers eveytime a child inside the firebase is changed.</p>

<pre>
    var ref = new Firebase("https://yourfirebaseio.com/");
    ref.on('child_changed', function(snapshot){
        console.log(snapshot.val());
    });
</pre>


<p><strong>child_changed</strong> is used in conjuction either with <strong>child_added</strong> or <strong>child_removed</strong> which responds or triggers when there are changes to a list of items. The snapshot callback containes the child changed inside firebase.</p>

<h3>child_removed</h3>

<p><strong>child_removed</strong> triggers when a child inside firebase is removed.</p>

<pre>
    var ref = new Firebase("https://yourfirebaseio.com/");
    ref.on("child_removed", function(snapshot){
        console.log(snaphot.val());
    });
</pre>


<p>The snapshot callback contains the child removed from firebase.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amplify UI Activity]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2015/01/11/amplify/"/>
    <updated>2015-01-11T12:21:56+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2015/01/11/amplify</id>
    <content type="html"><![CDATA[<h2>Overriding Elements</h2>

<p>In the activity given to me, there are elements from the Amplify UI that I was supposed to recreate, Amplify UI uses bootstrap elements such as buttons and navigation bars. My job was to override the css elements so that they will look like the screenshots provided to me. The basic rule of overriding is to make sure that the <strong>CSS Stylesheet</strong> of the override elements should be placed last so that the given values would replace the previous style.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2015/01/07/wordpress/"/>
    <updated>2015-01-07T18:08:33+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2015/01/07/wordpress</id>
    <content type="html"><![CDATA[<h2>What is Wordpress?</h2>

<p>Wordpress is an application or a <strong>Content Management System</strong> that uses <strong>PHP</strong> and <strong>MySQL</strong>. It is a very useful tool for web development, you can install plugins, themes, just about anything that is related to Web Development. All you need to do is download the wordpress software <a href="https://wordpress.org/">here</a>, extract the contents into your local machine, then load it in the browser. It should lead you to the configuration page, it should look like this:
<img src = "http://renzcarlocabs.github.io/images/w.png" class="coverImage">
<img src = "http://renzcarlocabs.github.io/images/w2.png" class="coverImage">
After filling up configuration settings it should lead you to the dashboard which looks like this:
<img src = "http://renzcarlocabs.github.io/images/w3.png" class="coverImage">
Right now I am working on the <a href="http://www.favoritemedium.com/work.html">Featured Works Page</a> of the Favorite Medium Website. I am excited to do this and learn new things about wordpress.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Image Slider]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2015/01/05/image-slider/"/>
    <updated>2015-01-05T12:37:07+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2015/01/05/image-slider</id>
    <content type="html"><![CDATA[<h3>A Simple Image Slider</h3>

<p>There are various ways on how you can create an Image Slider. In this case we are going to showcase JQuery&rsquo;s functionalities. I will show you how I made the image slider from my previous blog.</p>

<h2>First Step</h2>

<p>The first step is creating the container for our slider.
<img src = "http://renzcarlocabs.github.io/images/s.png" class="coverImage"></p>

<h2>Second Step</h2>

<p>Next we will be configuring the css so that the other images will remain hidden.
<img src = "http://renzcarlocabs.github.io/images/s2.png" class="coverImageH"></p>

<h2>Last Step</h2>

<p>Now for the JQuery code.
<img src = "http://renzcarlocabs.github.io/images/s3.png" class="coverImage"></p>

<p>The <strong>animationSpeed</strong> variable refers to the speed of the transitioning between the images. You can change the variable name and value of this. As for the <strong>slideContainer</strong> variable, it refers to the container for the slider images. After all these, that&rsquo;s it! You now have a simple image slider.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JQUERY vs Javascript]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2014/12/17/jquery/"/>
    <updated>2014-12-17T09:03:19+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2014/12/17/jquery</id>
    <content type="html"><![CDATA[<h3>FAQ&rsquo;s</h3>

<p>What is Javascript? JQUERY? And what is the difference between the two? Are there any instances where one is better than the other? These are some of the questions I have asked myself when I was implementing JQUERY to my webpage. Although I have some background in Javascript, the word JQUERY has struck my mind and I was left thinking &ldquo;Just what the heck am I supposed to do with this?&rdquo;. And doing the slider has really answered most of my questions. But first&hellip;</p>

<h3>What is the difference between the two?</h3>

<p>Although at first sight, we may think that they are both entirely different languages or scripts used to run many applications. But then again we should think twice. Javascript is used for interface interactions, game development, web applications and so much more. It makes the user-computer interaction more lively and enjoying. Now imagine Javascript and I mean all better functions of it being compiled into one library that you can use for much FASTER browser-rendering. That is what JQUERY is about. The only difference between the two is that JQUERY is a compiled library of javascript codes which makes coding much easier. Here is an example of a Javascript code:</p>

<p><img src = "http://renzcarlocabs.github.io/images/javascript.png" class="coverImage"></p>

<p>And here is an example of a JQuery code:
<img src = "http://renzcarlocabs.github.io/images/jquery.png" class="coverImage"></p>

<p>Notice the function of JQuery? If not then I&rsquo;ll tell. JQuery can actually call names of elements present in the document. This is really effective when it comes to classes and ids, since sometimes you will be reffering to a particular element but all elements will be affected, this is where JQuery comes in. You can specifically call functions depending on their names or class or id names. Pretty neat huh?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recreation]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2014/12/04/recreation/"/>
    <updated>2014-12-04T09:15:01+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2014/12/04/recreation</id>
    <content type="html"><![CDATA[<h3>Started from scratch</h3>

<p>When I started having my training, I was asked to recreate a website just by looking from the screenshots provided. Below are the screenshots provided to me. Have a look for yourself.
<img src = "http://renzcarlocabs.github.io/images/r1.png" class="coverImage">
<img src = "http://renzcarlocabs.github.io/images/r2.png" class="coverImage">
<img src = "http://renzcarlocabs.github.io/images/r3.png" class="coverImage"></p>

<p>And here are the screenshots when I tried to replicate it.
<img src = "http://renzcarlocabs.github.io/images/dup1.png" class="coverImage">
<img src = "http://renzcarlocabs.github.io/images/dup2.png" class="coverImage"></p>

<p>To be quite honest, the design or the layout of the page, the alignment of certain elements, images and text took more time that when I was coding for the slider. I never was really design oriented hahaha! So anyway please check out my next blog, it will be about the documentation for the code of the slider. Please tune in :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intern's First Blog]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2014/12/02/myblog/"/>
    <updated>2014-12-02T15:40:12+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2014/12/02/myblog</id>
    <content type="html"><![CDATA[<h3>New to the Process!</h3>

<p>Well this is my very first blog, and although I have clearly no idea why it worked sinced all I&rsquo;ve done is that I&rsquo;ve followed the instructions located in <a href = "octopress.org">octopress.org</a>, it seems that I have managed to somehow, create a simple blog.</p>

<h3>Time Management</h3>

<p>I was given this task at around 9:30 in the morning and only seem to work it out at almost 4:00 in the afternoon. Seriously, I have got to get my groove on. Since my skills and abilities are used to Windows OS. I still am really trying to fit in with the Linux OS. I need to fit in, and fast if I really want to learn more.</p>

<h3>What I&rsquo;ve Learned so far</h3>

<p>I know that there are more things to learn in the command line other that directory manipulation, sudo apt-get install etc. But I think from what I know in the command line so far, it will get me through the basics of this operating system. Also I have just finished on the activity I&rsquo;ve been working, the re-creation of a website with a very simple slider and paginator with play and pause buttons which I will be featuring in the next blog I&rsquo;ll be doing. And obviously, I&rsquo;ve learned how to create a simple blog, even though this is only a basic blog, I will study on how to make it more lively.</p>

<hr />

<p align = "right">Best regards to me!</p>


<p align = "right">-Renz Carlo</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Intern]]></title>
    <link href="http://renzcarlocabs.github.io/blog/2014/12/01/the-intern/"/>
    <updated>2014-12-01T10:10:49+08:00</updated>
    <id>http://renzcarlocabs.github.io/blog/2014/12/01/the-intern</id>
    <content type="html"><![CDATA[<h3>The Intern</h3>

<p>There comes a point in our life that we have to start from the bottom in order to be at the top. Like gamers, you can&rsquo;t be a pro if you hadn&rsquo;t been a beginner. That&rsquo;s the reason on why I have branded myself the intern hahaha! Well asides from the fact that I will only have my OJT experience once, it really adds some finesse to me.</p>

<h3>Renz Carlo Aquino Cabual</h3>

<p>Hello, I am Renz Carlo Aquino Cabual. Residing at 025 Rizal Street Cabanatual City, Nueva Ecija, Philippines. Born on June 17, 1995. 19 Years of age, and currently taking an internship under the supervision of Mr. Efren Lim.</p>
]]></content>
  </entry>
  
</feed>
